{
	"info": {
		"_postman_id": "eb511846-4a99-482d-9dee-330ab0ca0327",
		"name": "DataDrivenAPIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23608144"
	},
	"item": [
		{
			"name": "CreateUserWithTestData",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"//LDECG - using the data variable ",
							"pm.test(\"Check user response data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\")); // data variable",
							"    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\")); // data variable",
							"    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\")); // data variable",
							"",
							"",
							"    //fetch the email from request:",
							"    const rawJSONBody = pm.request.body.raw; //Json String",
							"    //json to JS(Java Script) object:",
							"    const requestBody = JSON.parse(rawJSONBody);",
							"    //create a var to store the email from the request body",
							"    const email = requestBody.email;",
							"    console.log(\"expected email ===> \" + email);",
							"    pm.expect(jsonData.email).to.eql(email); // data variable",
							"});",
							"",
							"// Fetch the id of the User created ",
							"const response = pm.response.json();",
							"const userId = response.id;",
							"",
							"//set a local variable with the user id created",
							"pm.variables.set(\"user_id\",  userId);",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{tokenID}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "//name,gender, status: fetching from csv file: myuser.csv\n{\n    \"name\": \"{{name}}\",\n    \"gender\": \"{{gender}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"status\": \"{{status}}\"\n}\n//csv/json files data files",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/public/v2/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateAUserByID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//check the user was updated:",
							"pm.test(\"Is user status updated\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newstatus\"));",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{tokenID}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\" : \"{{newstatus}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/public/v2/users/{{user_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		}
	]
}